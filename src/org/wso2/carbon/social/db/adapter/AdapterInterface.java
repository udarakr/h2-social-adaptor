/*
 * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.wso2.carbon.social.db.adapter;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public interface AdapterInterface {
	
	ResultSet getPaginatedActivitySet(Connection connection,
			String targetId, String tenant, String order, int limit, int offset) throws SQLException;
	
	ResultSet getPopularTargetSet(Connection connection,
			String type, String tenantDomain, int limit, int offset)
			throws SQLException;
	
	long insertCommentActivity(Connection connection,
			String json, String targetId, String userId, String tenantDomain,
			int totalLikes, int totalUnlikes, int timeStamp)
			throws SQLException;

	boolean insertRatingActivity(Connection connection,
			long autoGeneratedKey, String targetId, String userId,
			String tenantDomain, int rating, int timeStamp) throws SQLException;

	boolean insertLikeActivity(Connection connection,
			String targetId, String actor, String tenantDomain, int likeValue,
			int timestamp) throws SQLException;

	PreparedStatement getPaginatedActivitySetPreparedStatement(
			Connection connection, String targetId, String tenant,
			String order, int limit, int offset) throws SQLException;

	PreparedStatement getPopularTargetSetPreparedStatement(
			Connection connection, String type, String tenantDomain, int limit,
			int offset) throws SQLException;

	PreparedStatement getInsertCommentActivityPreparedStatement(
			Connection connection, String json, String targetId, String userId,
			String tenantDomain, int totalLikes, int totalUnlikes, int timeStamp)
			throws SQLException;

	PreparedStatement getinsertRatingActivityPreparedStatement(
			Connection connection, long autoGeneratedKey, String targetId,
			String userId, String tenantDomain, int rating, int timeStamp)
			throws SQLException;

	PreparedStatement getinsertLikeActivityPreparedStatement(
			Connection connection, String targetId, String actor,
			String tenantDomain, int likeValue, int timestamp)
			throws SQLException;

	long getGenaratedKeys(ResultSet generatedKeys) throws SQLException;

}
